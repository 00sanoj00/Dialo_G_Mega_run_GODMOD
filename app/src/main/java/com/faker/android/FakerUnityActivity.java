/**
 * Generated by FakerAndroid for doc or help by https://github.com/Efaker/FakerAndroid
 */
package com.faker.android;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.view.KeyEvent;
import android.view.Window;
import android.widget.ImageView;
import android.widget.Toast;

import lk.dialog.megarunlor.R;

import static com.unity3d.ads.properties.ClientProperties.getActivity;

/**
 * TODO NOTE:this is a demo act if you want run it you should mode the manifest,if the app's main act extends com.unity3d.player.UnityPlayerActivity
 * else you can make this to main
 * TODO NOTE: you can extend the original main act
 */
public class FakerUnityActivity extends com.unity3d.player.UnityPlayerActivity implements JniBridge {
    public native void registerCallBack(Object object);
    static final int HANDLER_MSG_CALLJAVA = 1000;
    final Handler handler = new Handler(Looper.getMainLooper()) {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case HANDLER_MSG_CALLJAVA:
                    String cmsg = (String) msg.obj;
                    callJava(cmsg);
                    break;
            }
            super.handleMessage(msg);
        }
    };
    ImageView imageView;
    @Override
    protected void onCreate(Bundle savedInstanceState){
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        super.onCreate(savedInstanceState);
        registerCallBack(this);
        imageView = new ImageView(this);
        imageView.setImageResource(R.drawable.cyberyakku);
        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
        mUnityPlayer.addViewToPlayer(imageView,false);

        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                mUnityPlayer.removeViewFromPlayer(imageView);
            }
        },3000);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event)   {
        if(keyCode==KeyEvent.KEYCODE_BACK) {
        }
        return mUnityPlayer.injectEvent(event);
    }

    @Override
    public void onJniCall(String msg) {// unity player isnot main thread transfer method to main thread
        Message message = new Message();
        message.what =HANDLER_MSG_CALLJAVA;
        message.obj = msg;
        handler.sendMessage(message);
    }

    private void callJava(String msg){
        Logger.log(msg);
    }
}
